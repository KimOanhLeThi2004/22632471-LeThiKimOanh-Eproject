name: CI/CD Pipeline (Docker - Self-hosted, Windows PowerShell)

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      - name: 🧹 Clean old containers
        shell: powershell
        run: |
          docker compose down --remove-orphans
          docker system prune -af --volumes

      - name: 🔐 Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 🧾 Ghi tất cả secrets ra file .env để Docker Compose có thể đọc
      - name: 🧩 Generate .env file for Docker Compose
        shell: bash
        run: |
          echo "MONGODB_PRODUCT_URI=${{ secrets.MONGODB_PRODUCT_URI }}" >> .env
          echo "MONGODB_ORDER_URI=${{ secrets.MONGODB_ORDER_URI }}" >> .env
          echo "MONGODB_AUTH_URI=${{ secrets.MONGODB_AUTH_URI }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "AUTH_SERVICE_URL=${{ secrets.AUTH_SERVICE_URL }}" >> .env
          echo "RABBITMQ_URL=${{ secrets.RABBITMQ_URL }}" >> .env
          echo "RABBITMQ_QUEUE=${{ secrets.RABBITMQ_QUEUE }}" >> .env
          echo "PRODUCT_PORT=${{ secrets.PRODUCT_PORT }}" >> .env
          echo "ORDER_PORT=${{ secrets.ORDER_PORT }}" >> .env
          echo "AUTH_PORT=${{ secrets.AUTH_PORT }}" >> .env
          echo "API_GATEWAY_PORT=${{ secrets.API_GATEWAY_PORT }}" >> .env

      - name: 🏗️ Build and run services
        shell: bash
        run: |
          echo "🚀 Starting Docker Compose..."
          docker compose up -d --build

      - name: ⏳ Wait for API Gateway
        shell: powershell
        run: |
          for ($i = 0; $i -lt 10; $i++) {
            try {
              Invoke-WebRequest -Uri "http://localhost:${{ secrets.API_GATEWAY_PORT }}/api/health" -UseBasicParsing
              Write-Host "✅ API Gateway is up!"
              break
            } catch {
              Write-Host "Waiting for API Gateway..."
              Start-Sleep -Seconds 5
            }
          }

      - name: 📤 Push images to DockerHub
        shell: bash
        run: docker compose push
