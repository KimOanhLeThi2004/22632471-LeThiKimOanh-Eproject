name: CI/CD Pipeline (Docker - Self-hosted, Windows PowerShell)

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      # Làm sạch toàn bộ container, network, volume cũ
      - name: Clean old Docker environment
        shell: powershell
        run: |
          Write-Host "Stopping all containers..."
          docker ps -aq | ForEach-Object { docker stop $_; docker rm -f $_ }
          docker network prune -f
          docker system prune -af
          Write-Host "Docker environment cleaned."

      # Đăng nhập DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Tạo file .env để Docker Compose đọc được
      - name: Generate .env file for Docker Compose
        shell: powershell
        run: |
          if (Test-Path .\.env) { Remove-Item .\.env }
          $envLines = @"
          MONGODB_PRODUCT_URI=${{ secrets.MONGODB_PRODUCT_URI }}
          MONGODB_ORDER_URI=${{ secrets.MONGODB_ORDER_URI }}
          MONGODB_AUTH_URI=${{ secrets.MONGODB_AUTH_URI }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          AUTH_SERVICE_URL=${{ secrets.AUTH_SERVICE_URL }}
          RABBITMQ_URI=${{ secrets.RABBITMQ_URI }}
          RABBITMQ_QUEUE=${{ secrets.RABBITMQ_QUEUE }}
          PRODUCT_PORT=${{ secrets.PRODUCT_PORT }}
          ORDER_PORT=${{ secrets.ORDER_PORT }}
          AUTH_PORT=${{ secrets.AUTH_PORT }}
          API_GATEWAY_PORT=${{ secrets.API_GATEWAY_PORT }}
          "@
          $envLines | Out-File -Encoding ascii -FilePath .env
          Write-Host ".env file generated."

      # Build và khởi chạy service (dùng project name cố định để down/up trùng)
      - name: Build and run services
        shell: powershell
        run: |
          Write-Host "Starting Docker Compose..."
          docker compose -p eproject down --remove-orphans
          docker compose -p eproject up -d --build
          Write-Host "All services started."

      # Chờ cho MongoDB & RabbitMQ sẵn sàng
      - name: Wait for core services
        shell: powershell
        run: |
          Write-Host "Waiting for MongoDB & RabbitMQ to be ready..."
          Start-Sleep -Seconds 15
          docker ps

      # Kiểm tra API Gateway health
      - name: Check API Gateway health
        shell: powershell
        run: |
          for ($i = 0; $i -lt 10; $i++) {
            try {
              Invoke-WebRequest -Uri "http://localhost:${{ secrets.API_GATEWAY_PORT }}/api/health" -UseBasicParsing
              Write-Host "API Gateway is up and healthy!"
              break
            } catch {
              Write-Host "Waiting for API Gateway..."
              Start-Sleep -Seconds 5
            }
          }

      # Push image lên DockerHub
      - name: Push images to DockerHub
        shell: powershell
        run: docker compose -p eproject push
