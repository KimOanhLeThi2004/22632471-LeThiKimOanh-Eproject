name: CI/CD Pipeline (Docker - Self-hosted, Windows PowerShell)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-deploy-local:
    runs-on: self-hosted

    steps:
      - name: üß© Checkout source code
        uses: actions/checkout@v4

      - name: üßπ Clean old containers (Windows-safe)
        continue-on-error: true
        shell: powershell
        run: |
          docker compose down --remove-orphans
          $containers = docker ps -aq
          if ($containers) {
            docker stop $containers
            docker rm -f $containers
          }
          docker system prune -af --volumes

      - name: ‚öôÔ∏è Set environment variables (PowerShell-safe)
        shell: powershell
        run: |
          echo "MONGODB_AUTH_URI=${{ secrets.MONGODB_AUTH_URI }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "AUTH_PORT=${{ secrets.AUTH_PORT }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "MONGODB_PRODUCT_URI=${{ secrets.MONGODB_PRODUCT_URI }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "AUTH_SERVICE_URL=${{ secrets.AUTH_SERVICE_URL }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "RABBITMQ_URL=${{ secrets.RABBITMQ_URL }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "PRODUCT_PORT=${{ secrets.PRODUCT_PORT }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "MONGODB_ORDER_URI=${{ secrets.MONGODB_ORDER_URI }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "RABBITMQ_QUEUE=${{ secrets.RABBITMQ_QUEUE }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "ORDER_PORT=${{ secrets.ORDER_PORT }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "API_GATEWAY_PORT=${{ secrets.API_GATEWAY_PORT }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: üèóÔ∏è Build Docker images
        run: docker compose build

      # ‚úÖ Gi·ªØ container ch·∫°y, kh√¥ng t·ª± t·∫Øt sau khi test
      - name: üß™ Run API services locally
        run: |
          docker compose up -d
          echo "‚è≥ Waiting for services to start..."
          Start-Sleep -Seconds 15
          docker ps -a

      # (N·∫øu b·∫°n v·∫´n mu·ªën test API t·ª± ƒë·ªông th√¨ th√™m b∆∞·ªõc test ri√™ng t·∫°i ƒë√¢y, VD curl/g·ªçi endpoint)

      - name: üîê Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üì§ Push images to DockerHub
        run: docker compose push

      # ‚ö†Ô∏è Gi·ªØ nguy√™n container sau deploy (kh√¥ng down/up l·∫°i)
      - name: üîÑ Deploy updated containers (keep running)
        shell: powershell
        run: |
          docker compose pull
          docker compose up -d --remove-orphans
          docker ps
