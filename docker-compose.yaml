services:
  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "37017:27017"
    networks:
      - app-network
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network
    restart: always

  auth:
    build: ./auth
    env_file:
      - ./auth/.env
    depends_on:
      - mongo
    ports:
      - "3000:3000"
    networks:
      - app-network
    restart: always

  product:
    build: ./product
    ports:
      - "3001:3001"
    env_file:
      - ./product/.env
    depends_on:
      - mongo
      - rabbitmq
    networks:
      - app-network
    restart: always

  order:
    build: ./order
    env_file:
      - ./order/.env
    depends_on:
      - mongo
      - rabbitmq
    ports:
      - "3002:3002"
    networks:
      - app-network
    restart: always

  api-gateway:
    build: ./api-gateway
    ports:
      - "3003:3003"
    depends_on:
      - auth
      - product
      - order
    networks:
      - app-network
    restart: always

  # ĐÚNG: api-test là một service riêng biệt, ngang hàng
  # Lưu ý: Thư mục ./tests không có trong cấu trúc bạn cung cấp ban đầu.
  # Bạn cần tạo thư mục này và Dockerfile tương ứng cho nó nếu muốn dùng.
  # Tên service trong depends_on cũng cần khớp với tên bạn định nghĩa (vd: product, order)
  api-test:
    # build: ./tests # Đảm bảo đường dẫn này đúng và có Dockerfile
    image: curlimages/curl:latest # Hoặc dùng một image phù hợp để test API
    depends_on:
      - product # Sửa tên service
      - order   # Sửa tên service
      # - payment-service # Bỏ service không tồn tại
    networks:
      - app-network
    # Command để chạy test, ví dụ:
    # command: ["./run-tests.sh"]

networks:
  app-network:
    driver: bridge